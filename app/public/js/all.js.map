{"version":3,"sources":["config.js","jquery.timeago.js","cookies.min.js","script.js","facebook-login.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["var CONFIG = {\n\t\"facebook_app_id\" : \"741945802616236\",\n};","/**\n * Timeago is a jQuery plugin that makes it easy to support automatically\n * updating fuzzy timestamps (e.g. \"4 minutes ago\" or \"about 1 day ago\").\n *\n * @name timeago\n * @version 1.4.3\n * @requires jQuery v1.2.3+\n * @author Ryan McGeary\n * @license MIT License - http://www.opensource.org/licenses/mit-license.php\n *\n * For usage and examples, visit:\n * http://timeago.yarp.com/\n *\n * Copyright (c) 2008-2015, Ryan McGeary (ryan -[at]- mcgeary [*dot*] org)\n */\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    factory(require('jquery'));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n}(function ($) {\n  $.timeago = function(timestamp) {\n    if (timestamp instanceof Date) {\n      return inWords(timestamp);\n    } else if (typeof timestamp === \"string\") {\n      return inWords($.timeago.parse(timestamp));\n    } else if (typeof timestamp === \"number\") {\n      return inWords(new Date(timestamp));\n    } else {\n      return inWords($.timeago.datetime(timestamp));\n    }\n  };\n  var $t = $.timeago;\n\n  $.extend($.timeago, {\n    settings: {\n      refreshMillis: 60000,\n      allowPast: true,\n      allowFuture: false,\n      localeTitle: false,\n      cutoff: 0,\n      strings: {\n        prefixAgo: null,\n        prefixFromNow: null,\n        suffixAgo: \"ago\",\n        suffixFromNow: \"from now\",\n        inPast: 'any moment now',\n        seconds: \"less than a minute\",\n        minute: \"about a minute\",\n        minutes: \"%d minutes\",\n        hour: \"about an hour\",\n        hours: \"about %d hours\",\n        day: \"a day\",\n        days: \"%d days\",\n        month: \"about a month\",\n        months: \"%d months\",\n        year: \"about a year\",\n        years: \"%d years\",\n        wordSeparator: \" \",\n        numbers: []\n      }\n    },\n\n    inWords: function(distanceMillis) {\n      if(!this.settings.allowPast && ! this.settings.allowFuture) {\n          throw 'timeago allowPast and allowFuture settings can not both be set to false.';\n      }\n\n      var $l = this.settings.strings;\n      var prefix = $l.prefixAgo;\n      var suffix = $l.suffixAgo;\n      if (this.settings.allowFuture) {\n        if (distanceMillis < 0) {\n          prefix = $l.prefixFromNow;\n          suffix = $l.suffixFromNow;\n        }\n      }\n\n      if(!this.settings.allowPast && distanceMillis >= 0) {\n        return this.settings.strings.inPast;\n      }\n\n      var seconds = Math.abs(distanceMillis) / 1000;\n      var minutes = seconds / 60;\n      var hours = minutes / 60;\n      var days = hours / 24;\n      var years = days / 365;\n\n      function substitute(stringOrFunction, number) {\n        var string = $.isFunction(stringOrFunction) ? stringOrFunction(number, distanceMillis) : stringOrFunction;\n        var value = ($l.numbers && $l.numbers[number]) || number;\n        return string.replace(/%d/i, value);\n      }\n\n      var words = seconds < 45 && substitute($l.seconds, Math.round(seconds)) ||\n        seconds < 90 && substitute($l.minute, 1) ||\n        minutes < 45 && substitute($l.minutes, Math.round(minutes)) ||\n        minutes < 90 && substitute($l.hour, 1) ||\n        hours < 24 && substitute($l.hours, Math.round(hours)) ||\n        hours < 42 && substitute($l.day, 1) ||\n        days < 30 && substitute($l.days, Math.round(days)) ||\n        days < 45 && substitute($l.month, 1) ||\n        days < 365 && substitute($l.months, Math.round(days / 30)) ||\n        years < 1.5 && substitute($l.year, 1) ||\n        substitute($l.years, Math.round(years));\n\n      var separator = $l.wordSeparator || \"\";\n      if ($l.wordSeparator === undefined) { separator = \" \"; }\n      return $.trim([prefix, words, suffix].join(separator));\n    },\n\n    parse: function(iso8601) {\n      var s = $.trim(iso8601);\n      s = s.replace(/\\.\\d+/,\"\"); // remove milliseconds\n      s = s.replace(/-/,\"/\").replace(/-/,\"/\");\n      s = s.replace(/T/,\" \").replace(/Z/,\" UTC\");\n      s = s.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/,\" $1$2\"); // -04:00 -> -0400\n      s = s.replace(/([\\+\\-]\\d\\d)$/,\" $100\"); // +09 -> +0900\n      return new Date(s);\n    },\n    datetime: function(elem) {\n      var iso8601 = $t.isTime(elem) ? $(elem).attr(\"datetime\") : $(elem).attr(\"title\");\n      return $t.parse(iso8601);\n    },\n    isTime: function(elem) {\n      // jQuery's `is()` doesn't play well with HTML5 in IE\n      return $(elem).get(0).tagName.toLowerCase() === \"time\"; // $(elem).is(\"time\");\n    }\n  });\n\n  // functions that can be called via $(el).timeago('action')\n  // init is default when no action is given\n  // functions are called with context of a single element\n  var functions = {\n    init: function(){\n      var refresh_el = $.proxy(refresh, this);\n      refresh_el();\n      var $s = $t.settings;\n      if ($s.refreshMillis > 0) {\n        this._timeagoInterval = setInterval(refresh_el, $s.refreshMillis);\n      }\n    },\n    update: function(time){\n      var parsedTime = $t.parse(time);\n      $(this).data('timeago', { datetime: parsedTime });\n      if($t.settings.localeTitle) $(this).attr(\"title\", parsedTime.toLocaleString());\n      refresh.apply(this);\n    },\n    updateFromDOM: function(){\n      $(this).data('timeago', { datetime: $t.parse( $t.isTime(this) ? $(this).attr(\"datetime\") : $(this).attr(\"title\") ) });\n      refresh.apply(this);\n    },\n    dispose: function () {\n      if (this._timeagoInterval) {\n        window.clearInterval(this._timeagoInterval);\n        this._timeagoInterval = null;\n      }\n    }\n  };\n\n  $.fn.timeago = function(action, options) {\n    var fn = action ? functions[action] : functions.init;\n    if(!fn){\n      throw new Error(\"Unknown function name '\"+ action +\"' for timeago\");\n    }\n    // each over objects here and call the requested function\n    this.each(function(){\n      fn.call(this, options);\n    });\n    return this;\n  };\n\n  function refresh() {\n    //check if it's still visible\n    if(!$.contains(document.documentElement,this)){\n      //stop if it has been removed\n      $(this).timeago(\"dispose\");\n      return this;\n    }\n\n    var data = prepareData(this);\n    var $s = $t.settings;\n\n    if (!isNaN(data.datetime)) {\n      if ( $s.cutoff == 0 || Math.abs(distance(data.datetime)) < $s.cutoff) {\n        $(this).text(inWords(data.datetime));\n      }\n    }\n    return this;\n  }\n\n  function prepareData(element) {\n    element = $(element);\n    if (!element.data(\"timeago\")) {\n      element.data(\"timeago\", { datetime: $t.datetime(element) });\n      var text = $.trim(element.text());\n      if ($t.settings.localeTitle) {\n        element.attr(\"title\", element.data('timeago').datetime.toLocaleString());\n      } else if (text.length > 0 && !($t.isTime(element) && element.attr(\"title\"))) {\n        element.attr(\"title\", text);\n      }\n    }\n    return element.data(\"timeago\");\n  }\n\n  function inWords(date) {\n    return $t.inWords(distance(date));\n  }\n\n  function distance(date) {\n    return (new Date().getTime() - date.getTime());\n  }\n\n  // fix for IE6 suckage\n  document.createElement(\"abbr\");\n  document.createElement(\"time\");\n}));\n","(function(g,f){'use strict';var h=function(e){if(\"object\"!==typeof e.document)throw Error(\"Cookies.js requires a `window` with a `document` object\");var b=function(a,d,c){return 1===arguments.length?b.get(a):b.set(a,d,c)};b._document=e.document;b._cacheKeyPrefix=\"cookey.\";b._maxExpireDate=new Date(\"Fri, 31 Dec 9999 23:59:59 UTC\");b.defaults={path:\"/\",secure:!1};b.get=function(a){b._cachedDocumentCookie!==b._document.cookie&&b._renewCache();a=b._cache[b._cacheKeyPrefix+a];return a===f?f:decodeURIComponent(a)};\nb.set=function(a,d,c){c=b._getExtendedOptions(c);c.expires=b._getExpiresDate(d===f?-1:c.expires);b._document.cookie=b._generateCookieString(a,d,c);return b};b.expire=function(a,d){return b.set(a,f,d)};b._getExtendedOptions=function(a){return{path:a&&a.path||b.defaults.path,domain:a&&a.domain||b.defaults.domain,expires:a&&a.expires||b.defaults.expires,secure:a&&a.secure!==f?a.secure:b.defaults.secure}};b._isValidDate=function(a){return\"[object Date]\"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())};\nb._getExpiresDate=function(a,d){d=d||new Date;\"number\"===typeof a?a=Infinity===a?b._maxExpireDate:new Date(d.getTime()+1E3*a):\"string\"===typeof a&&(a=new Date(a));if(a&&!b._isValidDate(a))throw Error(\"`expires` parameter cannot be converted to a valid Date instance\");return a};b._generateCookieString=function(a,b,c){a=a.replace(/[^#$&+\\^`|]/g,encodeURIComponent);a=a.replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\");b=(b+\"\").replace(/[^!#$&-+\\--:<-\\[\\]-~]/g,encodeURIComponent);c=c||{};a=a+\"=\"+b+(c.path?\";path=\"+\nc.path:\"\");a+=c.domain?\";domain=\"+c.domain:\"\";a+=c.expires?\";expires=\"+c.expires.toUTCString():\"\";return a+=c.secure?\";secure\":\"\"};b._getCacheFromString=function(a){var d={};a=a?a.split(\"; \"):[];for(var c=0;c<a.length;c++){var e=b._getKeyValuePairFromCookieString(a[c]);d[b._cacheKeyPrefix+e.key]===f&&(d[b._cacheKeyPrefix+e.key]=e.value)}return d};b._getKeyValuePairFromCookieString=function(a){var b=a.indexOf(\"=\"),b=0>b?a.length:b,c=a.substr(0,b),e;try{e=decodeURIComponent(c)}catch(f){console&&\"function\"===\ntypeof console.error&&console.error('Could not decode cookie with key \"'+c+'\"',f)}return{key:e,value:a.substr(b+1)}};b._renewCache=function(){b._cache=b._getCacheFromString(b._document.cookie);b._cachedDocumentCookie=b._document.cookie};b._areEnabled=function(){var a=\"1\"===b.set(\"cookies.js\",1).get(\"cookies.js\");b.expire(\"cookies.js\");return a};b.enabled=b._areEnabled();return b},e=\"object\"===typeof g.document?h(g):h;\"function\"===typeof define&&define.amd?define(function(){return e}):\"object\"===typeof exports?\n(\"object\"===typeof module&&\"object\"===typeof module.exports&&(exports=module.exports=e),exports.Cookies=e):g.Cookies=e})(\"undefined\"===typeof window?this:window);","jQuery(document).ready(function() {\n\t$(\"time.datetime-posted\").timeago();\n});","$.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        }\n});\n\nwindow.fbAsyncInit = function() {\n  FB.init({\n    appId      : CONFIG.facebook_app_id,\n    cookie     : true,  // enable cookies to allow the server to access \n                        // the session\n    xfbml      : true,  // parse social plugins on this page\n    version    : 'v2.4' // use version 2.2\n  });\n\n   FB.getLoginStatus(function(response){\n        if (response.status === 'connected') {\n           getAndApplyUserDownvotes();\n        }\n    });\n};\n\n// Load the SDK asynchronously\n(function(d, s, id) {\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) return;\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));\n\n\nfunction upsertUser(facebookUserId) {\n    console.log(\"upserting user\");\n    return $.ajax({\n        url:\"/user\",\n        method: \"PUT\",\n        data: {\n            \"facebookUserId\" : facebookUserId\n        },\n        context: document.body,\n        error: function(jqXHR, textStatus, errorThrown) {\n            console.log(jqXHR, textStatus, errorThrown)\n        }\n    });\n}\n\nfunction downvote(worstThingDOM) {\n    setWorstThingAsBeingDownvoted(worstThingDOM);\n    var worstThingId = $(worstThingDOM).data(\"id\");\n    return $.ajax({\n        url:\"/downvote\",\n        method: \"POST\",\n        data: {\n            \"worstThingId\" : worstThingId,\n        },\n        context: document.body,\n        error: function(jqXHR, textStatus, errorThrown) {\n            console.log(jqXHR, textStatus, errorThrown)\n        }\n    });\n}\n\nfunction getUserDownvotes() {\n    return $.ajax({\n        url:\"/user-downvotes\",\n        method: \"GET\",\n        context: document.body,\n        error: function(jqXHR, textStatus, errorThrown) {\n            console.log(jqXHR, textStatus, errorThrown)\n        }\n    });\n}\n\nfunction applyUserDownvotesToView(worstThingIds) {\n    var userDownvotedWorstThings = $.grep($(\".worst-thing\"), function(worstThing){\n        //$.inArray returns -1 if not in array and index if in array\n        return $.inArray($(worstThing).data(\"id\"), worstThingIds) >= 0;\n    });\n    $.each(userDownvotedWorstThings, function(){\n        setWorstThingAsBeingDownvoted(this);\n    });\n}\n\nfunction getAndApplyUserDownvotes() {\n    getUserDownvotes().success(function(downvotes){\n        var worstThingIds = $.map(downvotes, function(downvote){\n            return downvote.worstThingId;\n        });\n        applyUserDownvotesToView(worstThingIds);\n    });\n}\n\nfunction setWorstThingAsBeingDownvoted(worstThingDOM) {\n    $(worstThingDOM).addClass(\"user-downvoted\");\n    $(worstThingDOM).find(\"button\").prop('disabled', true);\n    $(worstThingDOM).find(\".downvote-count\").html(\n        parseInt($(worstThingDOM).find(\".downvote-count\").html())+1\n    );\n}\n\njQuery(document).ready(function(){\n    $(\".downvote button\").click(function(){\n        // Get this button's WorstThing element\n        var worstThingDOM = $(this).closest(\".worst-thing\");\n        FB.getLoginStatus(function(response){\n            if (response.status === 'connected'){\n                downvote(worstThingDOM);\n            } else {\n                FB.login(function(response){\n                    upsertUser(response.authResponse.userID)\n                        .success(function(response){\n                            downvote(worstThingDOM).success(function(){\n                                getAndApplyUserDownvotes();\n                            });\n                        });\n                });\n            }\n        });\n    });\n});\n"],"sourceRoot":"/source/"}